services:
  postgres:
    image: postgres:16
    container_name: pg-podcast-index-manager
    environment:
      POSTGRES_DB: podcast-index-manger
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis-podcast-index-manager
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    volumes:
      - redis_data:/data

  web:
    build: .
    container_name: web-podcast-index-manager
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://admin:admin123@postgres:5432/podcast-index-manger
      REDIS_URL: redis://redis:6379
      PORT: 3000
    command: ["npm", "run", "start:web"]
    restart: unless-stopped

  worker:
    build: .
    container_name: worker-podcast-index-manager
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://admin:admin123@postgres:5432/podcast-index-manger
      REDIS_URL: redis://redis:6379
    command: ["npm", "run", "start:worker"]
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
